services:
  db:
    image: postgres:13
    container_name: gt-vision-db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3.9-management
    container_name: gt-vision-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      # CORRIGIDO para usar as variáveis do arquivo .env
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    restart: unless-stopped

  backend:
    build: ./backend
    container_name: gt-vision-backend
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - SECRET_KEY=${SECRET_KEY}
      - ADMIN_API_KEY=${ADMIN_API_KEY}
      - RABBITMQ_HOST=rabbitmq
      # CORRIGIDO para usar as variáveis do arquivo .env
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASS=${RABBITMQ_DEFAULT_PASS}
    depends_on:
      - db
      - rabbitmq
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  ai-processor:
    build: ./ai-processor
    container_name: gt-vision-ai-processor
    volumes:
      - ./ai-processor:/app
    environment:
      - RABBITMQ_HOST=rabbitmq
      - API_BASE_URL=http://backend:8000/api
      - ADMIN_API_KEY=${ADMIN_API_KEY}
    depends_on:
      rabbitmq:
        condition: service_started
      backend:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data: